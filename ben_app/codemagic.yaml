environment:
  flutter: 3.13.2
  xcode: "14.3"
  cocoapods: 1.12.1

scripts:
  # -------------------------- FLUTTER --------------------------
  - &get-package-dependencies
    name: Get Package dependencies
    script: flutter packages pub get

  - &get-flutter-dependencies
    name: Get Flutter dependencies
    script: "flutter pub get"

  - &check-lint
    name: Running linter analyse
    script: "flutter analyze"
    ignore_failure: true

  - &test-mobile
    name: Running tests
    script: |
      flutter pub global activate junitreport
      mkdir -p test-results
      flutter test --machine | tojunit > test-results/flutter.xml

  # -------------------------- ANDROID --------------------------
  - &android-setup-keystore
    name: Setup keystore
    script: |
      cat >> "$CM_BUILD_DIR/android/key.properties" <<EOF
      storePassword=$CM_KEYSTORE_PASSWORD
      keyPassword=$CM_KEY_PASSWORD
      keyAlias=$CM_KEY_ALIAS
      storeFile=$CM_KEYSTORE_PATH
      EOF

  - &android-setup-local-properties
    name: Setup local properties
    script: echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"

  - &build-appbundle
    name: Building Appbundle
    script: flutter build appbundle --release --build-number=$PROJECT_BUILD_NUMBER --flavor=$FLAVOR --target=$TARGET

  - &build-apk
    name: Building APK
    script: flutter build apk --release --build-number=$PROJECT_BUILD_NUMBER --flavor=$FLAVOR --target=$TARGET

  # -------------------------- IOS --------------------------
  - &ios-install-pods
    name: Install iOS Pods
    script: find . -name "Podfile" -execdir pod install \;

  - &ios-initialize-keychain
    name: Initialize iOS Keychain
    script: keychain initialize

  - &ios-fetch-signing-files
    name: Fetch signing files
    script: app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create

  - &ios-add-keychain
    name: Adding to keychain
    script: keychain add-certificates

  - &ios-setup-xcode
    name: Setup XCode use-profile
    script: xcode-project use-profiles

  - &build-ipa
    name: Build Flutter IPA
    script: flutter build ipa --flavor $FLAVOR --export-options-plist=/Users/builder/export_options.plist --build-number=$PROJECT_BUILD_NUMBER --target $TARGET

workflows:
  analyse-and-test:
    name: Analyse and Test
    instance_type: mac_mini_m1
    max_build_duration: 60
    triggering:
      events:
        - pull_request
      branch_patterns:
        - pattern: "*"
          include: true
          source: true
      cancel_previous_builds: true
    scripts:
      - *get-package-dependencies
      - *get-flutter-dependencies
      - *check-lint
      - *test-mobile
    artifacts:
      - flutter_drive.log
      - test-results/flutter.xml
    publishing:
      slack:
        channel: "#ben_app-pipeline" ## TODO Changeme
        notify_on_build_start: true
        notify:
          failure: true

  build-&-deploy-mobile-recette:
    name: Build & Deploy Mobile to inte
    max_build_duration: 60
    instance_type: mac_mini_m1
    environment:
      groups:
        - firebase_credentials
      android_signing:
        - theTribe
      ios_signing:
        certificates:
          - certificate: theTribe
            environment_variable: ~/Library/MobileDevice/Certificates
        provisioning_profiles:
          - profile: changeme ## TODO Changeme
            environment_variable: ~/Library/MobileDevice/Provisioning Profiles
      vars:
        FLAVOR: inte
        TARGET: lib/main_inte.dart
    integrations:
      app_store_connect: theTribe
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: "staging"
          include: true
          source: true
      cancel_previous_builds: true
    scripts:
      - *android-setup-keystore
      - *android-setup-local-properties
      - *ios-setup-xcode
      - *get-package-dependencies
      - *get-flutter-dependencies
      - *ios-install-pods
      - *build-appbundle
      - *build-apk
      # NOTE May be of use
      #- *ios-initialize-keychain
      #- *ios-fetch-signing-files
      #- *ios-add-keychain
      - *build-ipa
    artifacts:
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
      - build/**/outputs/apk/**/*.apk
      - build/**/outputs/bundle/**/*.aab
      - build/**/outputs/**/mapping.txt
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
      - test-results/flutter.xml
    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
      google_play:
        credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
        track: internal
        submit_as_draft: true
      firebase:
        firebase_service_account: $FIREBASE_SERVICE_ACCOUNT
        android:
          app_id: changeme ## TODO Changeme
          artifact_type: "apk"
          groups:
            - thetribe
            - ben_app ## TODO Changeme
      slack:
        channel: "#ben_app-pipeline" ## TODO Changeme
        notify_on_build_start: true
        notify:
          failure: true
          success: true

  build-&-deploy-mobile-production:
    name: Build & Deploy Mobile to production
    max_build_duration: 60
    instance_type: mac_mini_m1
    environment:
      groups:
        - firebase_credentials
      android_signing:
        - theTribe
      ios_signing:
        certificates:
          - certificate: theTribe
            environment_variable: ~/Library/MobileDevice/Certificates
        provisioning_profiles:
          - profile: changeme ## TODO Changeme
            environment_variable: ~/Library/MobileDevice/Provisioning Profiles
      vars:
        FLAVOR: prod
        TARGET: lib/main_prod.dart
    integrations:
      app_store_connect: theTribe
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: "main"
          include: true
          source: true
      cancel_previous_builds: true
    scripts:
      - *android-setup-keystore
      - *android-setup-local-properties
      - *get-package-dependencies
      - *get-flutter-dependencies
      - *build-appbundle
      - *build-apk
      - *ios-install-pods
      # NOTE may be used
      #- *ios-initialize-keychain
      #- *ios-fetch-signing-files
      #- *ios-add-keychain
      - *ios-setup-xcode
      - *build-ipa
    artifacts:
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
      - build/**/outputs/apk/**/*.apk
      - build/**/outputs/bundle/**/*.aab
      - build/**/outputs/**/mapping.txt
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
      - test-results/flutter.xml
    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
      google_play:
        credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
        track: internal
        submit_as_draft: true
      firebase:
        firebase_service_account: $FIREBASE_SERVICE_ACCOUNT
        android:
          app_id: changeme # TODO changeme
          artifact_type: "apk"
          groups:
            - thetribe
            - ben_app # TODO changeme
      slack:
        channel: "#ben_app-pipeline" # TODO changeme
        notify_on_build_start: true
        notify:
          failure: true
          success: true
